---
# Implement your Post Workload deployment tasks here

# Leave these as the last tasks in the playbook

- agnosticd_user_info:
    data:
      ocp4_guid: "{{ guid }}"
      ocp4_domain: "{{ guid }}{{ subdomain_base_suffix }}"
      ocp4_ssh_user: "{{ student_name }}"
      ocp4_password: "{{ student_password }}"
      ocp4_bastion: "{{ hostvars[groups.bastions.0].ansible_hostname }}.{{ guid }}{{ subdomain_base_suffix }}"
  when:
  - student_name is defined
  - groups.bastions is defined

# - when: student_name is defined
#   name: "Saving OCP4 cluster info for bookbag deployment"
#   copy:
#     owner: "{{ student_name }}"
#     content: |
#       [OCP4]
#       guid={{ guid }}
#       domain={{ subdomain_base_suffix }}
#       student_name={{ student_name }}
#       bastion={{ hostvars[groups.bastions.0].ansible_hostname }}.{{ guid }}{{ subdomain_base_suffix }}
#     dest: "/home/{{ student_name }}/cluster.info"
#   become: true

- set_fact:
    workshop_vars: workshop_vars | combine
- debug:
    var: workshop_vars
- name: deploy oadp lab bookbag
  when: student_name is defined
  block:
  - name: Get Konveyor lab git
    git:
      repo: "{{ bookbag_repo }}"
      dest: "{{ bookbag_dir }}"
      update: yes
  - name: Create project
    k8s:
      definition: 
  - name: "Building bookbag image"
    shell: "{{ item }}"
    args:
      chdir: "{{ bookbag_dir }}/{{ bookbag_build_dir }}"
    loop:
      - "oc project lab-instructions"
      - "oc process -f build-template.yaml -p GIT_REPO='{{ bookbag_repo }}' | oc apply -f -"
      - "oc start-build bookbag --follow --from-dir={{ bookbag_dir }}"
  - name: "Deploying bookbag image"
    shell: "oc process -f deploy-template.yaml -p WORKSHOP_VARS='{{ ocp4_info | to_json }}' | oc apply -f -"
    args:
      chdir: "{{ bookbag_dir }}/{{ bookbag_build_dir }}"

  - name: "Read bookbag route"
    shell: "oc get route -n lab-instructions bookbag -o go-template='{{ '{{' }} .spec.host {{ '}}' }}{{ '{{' }} println {{ '}}' }}'"
    register: output

  - debug:
      msg: "Route to bookbag : {{ output.stdout }}"

# For deployment onto a dedicated cluster (as part of the
# cluster deployment) set workload_shared_deployment to False
# This is the default so it does not have to be set explicitely
- name: pre_workload tasks complete
  debug:
    msg: "Post-Workload tasks completed successfully."
  when:
  - not silent | bool
  - not workload_shared_deployment | default(false) | bool

# For RHPDS deployment (onto a shared cluster) set
# workload_shared_deployment to True
# (in the deploy script or AgnosticV configuration)
- name: pre_workload tasks complete
  debug:
    msg: "Post-Software checks completed successfully"
  when:
  - not silent | bool
  - workload_shared_deployment | default(false) | bool
